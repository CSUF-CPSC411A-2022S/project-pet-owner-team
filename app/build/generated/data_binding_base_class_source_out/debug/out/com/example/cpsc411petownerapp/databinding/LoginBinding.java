// Generated by view binder compiler. Do not edit!
package com.example.cpsc411petownerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cpsc411petownerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView registerText;

  @NonNull
  public final Button signIn;

  @NonNull
  public final Button signUp;

  @NonNull
  public final EditText username;

  @NonNull
  public final TextView welcome;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout frameLayout,
      @NonNull EditText password, @NonNull TextView registerText, @NonNull Button signIn,
      @NonNull Button signUp, @NonNull EditText username, @NonNull TextView welcome) {
    this.rootView = rootView;
    this.frameLayout = frameLayout;
    this.password = password;
    this.registerText = registerText;
    this.signIn = signIn;
    this.signUp = signUp;
    this.username = username;
    this.welcome = welcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout frameLayout = (ConstraintLayout) rootView;

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.registerText;
      TextView registerText = ViewBindings.findChildViewById(rootView, id);
      if (registerText == null) {
        break missingId;
      }

      id = R.id.signIn;
      Button signIn = ViewBindings.findChildViewById(rootView, id);
      if (signIn == null) {
        break missingId;
      }

      id = R.id.signUp;
      Button signUp = ViewBindings.findChildViewById(rootView, id);
      if (signUp == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.welcome;
      TextView welcome = ViewBindings.findChildViewById(rootView, id);
      if (welcome == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, frameLayout, password, registerText,
          signIn, signUp, username, welcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
