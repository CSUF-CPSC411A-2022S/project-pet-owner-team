// Generated by view binder compiler. Do not edit!
package com.example.cpsc411petownerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cpsc411petownerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button add;

  @NonNull
  public final EditText address;

  @NonNull
  public final EditText age;

  @NonNull
  public final TextView errorMsg;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText petAge;

  @NonNull
  public final EditText petName;

  @NonNull
  public final EditText petType;

  @NonNull
  public final EditText phoneNumber;

  @NonNull
  public final EditText sex;

  @NonNull
  public final RecyclerView userList;

  private InfoBinding(@NonNull ConstraintLayout rootView, @NonNull Button add,
      @NonNull EditText address, @NonNull EditText age, @NonNull TextView errorMsg,
      @NonNull EditText name, @NonNull EditText petAge, @NonNull EditText petName,
      @NonNull EditText petType, @NonNull EditText phoneNumber, @NonNull EditText sex,
      @NonNull RecyclerView userList) {
    this.rootView = rootView;
    this.add = add;
    this.address = address;
    this.age = age;
    this.errorMsg = errorMsg;
    this.name = name;
    this.petAge = petAge;
    this.petName = petName;
    this.petType = petType;
    this.phoneNumber = phoneNumber;
    this.sex = sex;
    this.userList = userList;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InfoBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add;
      Button add = ViewBindings.findChildViewById(rootView, id);
      if (add == null) {
        break missingId;
      }

      id = R.id.address;
      EditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.age;
      EditText age = ViewBindings.findChildViewById(rootView, id);
      if (age == null) {
        break missingId;
      }

      id = R.id.error_msg;
      TextView errorMsg = ViewBindings.findChildViewById(rootView, id);
      if (errorMsg == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.petAge;
      EditText petAge = ViewBindings.findChildViewById(rootView, id);
      if (petAge == null) {
        break missingId;
      }

      id = R.id.petName;
      EditText petName = ViewBindings.findChildViewById(rootView, id);
      if (petName == null) {
        break missingId;
      }

      id = R.id.petType;
      EditText petType = ViewBindings.findChildViewById(rootView, id);
      if (petType == null) {
        break missingId;
      }

      id = R.id.phoneNumber;
      EditText phoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumber == null) {
        break missingId;
      }

      id = R.id.sex;
      EditText sex = ViewBindings.findChildViewById(rootView, id);
      if (sex == null) {
        break missingId;
      }

      id = R.id.userList;
      RecyclerView userList = ViewBindings.findChildViewById(rootView, id);
      if (userList == null) {
        break missingId;
      }

      return new InfoBinding((ConstraintLayout) rootView, add, address, age, errorMsg, name, petAge,
          petName, petType, phoneNumber, sex, userList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
